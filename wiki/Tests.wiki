#labels tests
=Performed Tests=

== Introduction ==
  Performed test are mainly in /src/test package from the standar test package used for Lucene community modified to include the checks focus to the changes apply to include Collection Frequecy parameter.

  Apart from the previous (detailed later in this document) I've made a basic check with a simple program which read an index, fech the terms included and makes a count of the both DF (document frequency) and CF (collection frequency), in this test the methods checked are: _idx.colDocFreq(indexedTerm)_ where "idx" is an IndexReader object and _termEnum.colFreq()_ where "termEnum" is a TermEnum object.

  From the previous test we can see the access to CF came from two different ways, from the IndexReader object by giving the Term and from TermEnum object.

== Details ==

*TestIndexReaderCF* : is based on the test file _TestIndexReader_ in which the method _reader.colDocFreq(searchTerm)_ have been included to get CF variable where DF is accessed. To check the access to CF, a method "addDocCF" has been made, which adds the same term twice to the doc, with this we can check the difference between DF and CF where DF only count the number of different documents which includes the term and the CF counts the total number of terms include in the document.
Exactly, the calls have been included in the following tests:
  * _testBasicDelete()_
  * _testDeleteReaderWriterConflictUnoptimized()_: based on "deleteReaderWriterConflict(false)" method, this doesn't include the _writer.optimize()_ called
  * _testDeleteReaderWriterConflictOptimized()_: based on "deleteReaderWriterConflict(true)" method, this included the _writer.optimize()_ called that include a "merge()" procedure
  * _testDeleteReaderReaderConflictUnoptimized()_: based on "deleteReaderReaderConflict(false)"
  * _testDeleteReaderReaderConflictOptimized()_: based on "deleteReaderReaderConflict(true)"