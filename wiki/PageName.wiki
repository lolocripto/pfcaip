&nbsp;&nbsp;&nbsp; 4. Lectura de la variable CF:<br><div>
{|  border=1 bordercolor=#000000 cellpadding=3 cellspacing=0 class="" id=mfpf width=100%<tbody> 
|  valign=top | <br>
|  style=TEXT-ALIGN:center width=33.333333333333336% | 
Clase<br>
|  style=TEXT-ALIGN:center width=33.333333333333336% | 
Metodo / Atributo<br>
|  style=TEXT-ALIGN:center width=33.333333333333336% | 
Observaciones<br>
|- 
|  valign=top | 
1<br>
|  width=33.333333333333336% | <i>IndexReader</i> (abstracta)<br>
|  width=33.333333333333336% | 
public abstract int colDocFreq(Term t) throws IOException;
|  width=33.333333333333336% | 
MODIFICACION: se inserta el método abstracto que lee la vble para luego implementarlo en las clases que heredan<br>
|- 
|  valign=top | 
2<br>
|  valign=top | <i>SegmentReader</i> (extiende de IndexReader)<br>
|  valign=top | 
colDocFreq(Term t)
|  valign=top | 
MODIFICACION: implementación del método creado en el IndexReader del punto 2<br>
|- 
|  valign=top | 
3<br>
|  valign=top | <i>FilterIndexReader </i>(extiende de IndexReader)<br>
|  valign=top | 
colDocFreq(Term t)
|  valign=top | 
MODIFICACION: implementación del método creado en el IndexReader del punto 2
|- 
|  valign=top | 
4<br>
|  valign=top | 
TermEnum (abstracta)<br>
|  valign=top | 
public abstract int colFreq();
|  valign=top | 
MODIFICACION: añadimos el met. abstracto para usarlo en las clases que la heredan<br>
|- 
|  valign=top | 
5<br>
|  valign=top | 
SegmentTermEnum (extiende TermEnum)<br>
|  valign=top | 
&nbsp;public final int colFreq()
|  valign=top | 
MODIFICACION: independientemente de si lo leemos desde el fichero propio "aip" o si lo hacemos desde "tis" hay que añadir este metodo para leer el dato de "termInfo", cuidado&#33; no pueden escribir en termInfo tanto desde la lectura del "aip" como del "tis", hay que elegir uno primero&#33;<br>
|- 
|  valign=top | 
6<br>
|  valign=top | 
FreqProxFieldMergeState
|  valign=top | 
public int getColFreq()
|  valign=top | 
MODIFICACION: añadimos el metodo getColFreq() que pilla CF de la vble 'p' que es privada<br>
|- 
|  valign=top | 
7<br>
|  valign=top | 
DirectoryReader (extiende IndexReader)<br>
|  valign=top | 
public int colDocFreq(Term t) throws IOException<br>
|  valign=top | 
MODIF: añadimos este metodo, la implementacion es un poco rara porque va sumando los valores de los objetos "subReaders", es una copia del "docFreq()"<br>
Cuidado&#33; no se si sirve de algo o no<br>
|- 
|  valign=top | 
8<br>
|  valign=top | 
MultiTermEnum (extiende TermEnum, esta dentro de la clase DirectoryReader)<br>
|  valign=top | <br>
|  valign=top | 
MODIF: hay varias modificaciones:<br>
(1) private int colFreq; //inicializamos<br>
(2) colFreq = 0; // antes del metodo "next()"<br>
(3) colFreq += top.termEnum.colFreq(); //en el metodo "next()" vamos calculandolo<br>
(4) public int colFreq(); //creamos un metodo getter que devuelva el colFreq<br>
|- 
|  valign=top | 
9<br>
|  valign=top | 
FilterTermEnum (extiende TermEnum, esta dentro de FilterIndexReader)<br>
|  valign=top | 
public int colFreq()
|  valign=top | 
MODIF: añadimos el metodo que devuelve colFreq el parametro TermEnum "in"<br>
|- 
|  valign=top | 
10<br>
|  valign=top | <i>FilteredTermEnum </i>(extiende TermEnum, pero esta dentro de otro paquete, el org.apache.lucene.search)<br>
|  valign=top | 
public int colFreq()
|  valign=top | 
MODIF: he añadido este metodo para evitar error de compilacion ya que hereda de una clase abstracta que lo tiene definido.No esta probado.<br>
|- 
|  valign=top | 
11<br>
|  valign=top | <i>MultiReader </i>(extiende IndexReader)<br>
|  valign=top | 
public int colDocFreq(Term t)
|  valign=top | 
MODIF: he añadido este metodo para evitar error de compilacion ya que hereda de una clase abstracta que lo tiene definido. No esta probado.<br>
|- 
|  valign=top | 
12<br>
|  valign=top | <i>ParallelTermEnum </i>(extiende TermEnum, pero esta dentro de ParallelReader)<br>
|  valign=top | 
public int colFreq()
|  valign=top | 
MODIF: he añadido este metodo para evitar error de compilacion ya que hereda de una clase abstracta que lo tiene definido. No esta probado.
|- 
|  valign=top | 
13<br>
|  valign=top | 
ParallelReader (extiende IndexReader)<br>
|  valign=top | 
public int colDocFreq(Term term)
|  valign=top | 
MODIF: he añadido este metodo para evitar error de compilacion ya que hereda de una clase abstracta que lo tiene definido. No esta probado.
|- 
|  valign=top | 
14<br>
|  valign=top | 
TermDocs (Interfaz)<br>
|  valign=top | 
int colFreq();
|  valign=top | 
MODIF: añadir el metodo para implementarlo en todas las clases que implenten la interfaz<br>
|- 
|  valign=top | 
15<br>
|  valign=top | 
MultiTermDocs (Implementa TermDocs)<br>
|  valign=top | 
public int colFreq();<br>
|  valign=top | 
MODIF: implementamos el metodo de la interfaz. Es un poco extraño porque el atributo del que leo CF tambien implementa la interfaz TermDocs.<br>
|- 
|  valign=top | 
16<br>
|  valign=top | 
AllTermDocs (Implementa TermDocs)<br>
|  valign=top | 
public int colFreq()<br>
|  valign=top | 
MODIF: implemeta el metodo tambien pero NO ESTOY SEGURO de que esté bien porque devuelve 1 como el metodo que devuelve el DF&#33;&#33;<br>
|- 
|  valign=top | 
17<br>
|  valign=top | 
FilterIndexReader (Implementa TermDocs)<br>
|  valign=top | 
public int colFreq()<br>
|  valign=top | 
MODIF: implementa el metodo de la interfaz, como en el caso de 15 es extraño<br>
|- 
|  valign=top | 
18<br>
|  valign=top | 
ParallelTermDocs (Implementa TermDocs y extiende TermEnum, pero esta dentro de ParallelReader)<br>
|  valign=top | 
public int colFreq()<br>
|  valign=top | 
MODIF: idem<br>
|- 
|  valign=top | 
19<br>
|  valign=top | 
SegmentTermDocs (Implementa TermDocs)<br>
|  valign=top | <br>
|  valign=top | 
MODIF: se incluyen las lineas de codigo siguientes para incluir la variable CF en la clase:<br>
1. protected int cf; //declaracion<br>
2. cf = ti.colFreq; //asignacion (en el metodo seek())<br>
3. public final int colFreq() { return cf; } //metodo de acceso<br>
CUIDADO: aqui no se ha hecho ninguna modificacion al metodo "next()" para asignar valor a CF como lo hace para la vble "freq" que es la que devuelve en el metodo "freq()", me da la sensacion de que la lee del fichero ".frq"<br>
|- 
|  valign=top | 
20<br>
|  valign=top | 
MultipleTermPositions (implementa TermPositions, que extiende el interfaz TermDocs)<br>
|  valign=top | 
public final int colFreq()
|  valign=top | 
MODIF: se incluye un metodo para cumplir con la interfaz.<br>
CUIDADO: se esta devolviendo el mismo valor que DF, fijo que esta mal<br>
|- 
|  valign=top | 
21<br>
|  valign=top | 
SegmentMerger<br>
|  valign=top | 
&nbsp;private final int appendPostings(final FormatPostingsTermsConsumer termsConsumer, SegmentMergeInfo[] smis, int n)
|  valign=top | 
MODIF: en el metodo appendPostings se modifica la llamada al docConsumer.addDoc y se llama al metodo sobrecargado que se creo para añadir la vable CF:<br>
final FormatPostingsPositionsConsumer posConsumer = docConsumer.addDoc(doc, freq, postings.colFreq())<br>
esto es posible gracias a todas las modificaciones previas (puntos 14-20)<br></tbody>
|}</div>